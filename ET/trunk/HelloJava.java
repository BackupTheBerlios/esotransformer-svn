import java.io.BufferedReader;
import java.io.InputStreamReader;
public class HelloJava{
	int ptr;
	int[] mem = new int[1000];
	public static void main(String[] args) {
		HelloJava bf = new HelloJava();
		bf.doIt();
	}
 void readField() { 
     try {
         BufferedReader bin = new BufferedReader(new InputStreamReader(System.in));
         System.out.println("Input: ");
         mem[ptr] = Integer.parseInt(bin.readLine());
     }
   catch (Exception ex) {
       ex.printStackTrace();
       System.exit(1);
   }
 }
 void printField() {
 	char c = (char) mem[ptr];
 		if (c < 33|| c > 126) {
 			System.out.print((int) c  + "d ");
 		} else {
 			System.out.print(c);
 		}
 	}

// main action goes here
public void doIt() {
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
while (mem[ptr] != 0) {
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
--ptr;
--ptr;
--ptr;
--ptr;
--(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
--ptr;
--ptr;
--ptr;
--ptr;
--(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
--ptr;
--ptr;
--ptr;
--ptr;
--(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
--ptr;
--ptr;
--ptr;
--ptr;
--(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
--ptr;
--ptr;
--ptr;
--ptr;
--(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
--ptr;
--ptr;
--ptr;
--ptr;
--(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
--ptr;
--ptr;
--ptr;
--ptr;
--(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
--ptr;
--ptr;
--ptr;
--ptr;
--(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
--ptr;
--ptr;
--ptr;
--ptr;
--(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++ptr;
++(mem[ptr]);
--ptr;
--ptr;
--ptr;
--ptr;
--(mem[ptr]);
} // loop
++ptr;
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
++(mem[ptr]);
printField();
++ptr;
--(mem[ptr]);
--(mem[ptr]);
--(mem[ptr]);
printField();
++ptr;
--(mem[ptr]);
--(mem[ptr]);
printField();
--ptr;
printField();
++ptr;
++ptr;
   System.out.println(); 
}
}